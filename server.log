warning: unused import: `PositionDamageInstruction`
  --> src/genx/doubles_mechanics.rs:12:37
   |
12 |     Instruction, StateInstructions, PositionDamageInstruction, 
   |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `PSTypeChartLoader`
 --> src/genx/type_effectiveness.rs:8:41
  |
8 | use crate::data::ps_type_chart_loader::{PSTypeChartLoader, create_ps_type_chart_loader};
  |                                         ^^^^^^^^^^^^^^^^^

warning: unused import: `SideReference`
  --> src/genx/switch_effects.rs:10:44
   |
10 | use crate::battle_format::{BattlePosition, SideReference};
   |                                            ^^^^^^^^^^^^^

warning: unused imports: `ApplyVolatileStatusInstruction`, `PositionHealInstruction`, and `VolatileStatus`
  --> src/genx/switch_effects.rs:12:64
   |
12 |     Instruction, StateInstructions, PositionDamageInstruction, PositionHealInstruction,
   |                                                                ^^^^^^^^^^^^^^^^^^^^^^^
13 |     ApplyStatusInstruction, ApplyVolatileStatusInstruction, BoostStatsInstruction,
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
14 |     SideCondition, PokemonStatus, VolatileStatus, Stat, RemoveVolatileStatusInstruction
   |                                   ^^^^^^^^^^^^^^

warning: unused import: `PSMoveTarget`
  --> src/data/ps_generation_loader.rs:10:41
   |
10 | use crate::data::ps_types::{PSMoveData, PSMoveTarget, PSItemData};
   |                                         ^^^^^^^^^^^^

warning: unused import: `PSMoveTarget`
  --> src/data/ps_loader.rs:10:41
   |
10 | use crate::data::ps_types::{PSMoveData, PSMoveTarget, PSItemData};
   |                                         ^^^^^^^^^^^^

warning: unused import: `serde_json::Value`
 --> src/data/ps_type_chart_loader.rs:8:5
  |
8 | use serde_json::Value;
  |     ^^^^^^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
 --> src/generation.rs:7:5
  |
7 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `serde_json::Value`
  --> src/test_framework.rs:16:5
   |
16 | use serde_json::Value;
   |     ^^^^^^^^^^^^^^^^^
   |
help: if this is a test module, consider adding a `#[cfg(test)]` to the containing module
  --> src/lib.rs:77:1
   |
77 | pub mod test_framework;
   | ^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `HeaderValue` and `Query`
 --> src/ui/server.rs:7:21
  |
7 |     extract::{Path, Query, State as AxumState, WebSocketUpgrade},
  |                     ^^^^^
8 |     http::{HeaderValue, Method, StatusCode},
  |            ^^^^^^^^^^^

warning: unused variable: `file`
   --> src/ui/server.rs:322:28
    |
322 | async fn serve_static(Path(file): Path<String>) -> impl IntoResponse {
    |                            ^^^^ help: if this is intentional, prefix it with an underscore: `_file`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `damage`
   --> src/genx/instruction_generator.rs:379:43
    |
379 | ...                   for (i, (pos, damage)) in multi_damage.target_damages.iter_mut().enumerate() {
    |                                     ^^^^^^ help: if this is intentional, prefix it with an underscore: `_damage`

warning: unused variable: `user_position`
   --> src/genx/move_effects.rs:122:5
    |
122 |     user_position: BattlePosition,
    |     ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_user_position`

warning: unused variable: `user_position`
   --> src/genx/move_effects.rs:161:5
    |
161 |     user_position: BattlePosition,
    |     ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_user_position`

warning: unused variable: `user_position`
   --> src/genx/move_effects.rs:197:5
    |
197 |     user_position: BattlePosition,
    |     ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_user_position`

warning: unused variable: `user_position`
   --> src/genx/move_effects.rs:233:5
    |
233 |     user_position: BattlePosition,
    |     ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_user_position`

warning: unused variable: `user_position`
   --> src/genx/move_effects.rs:269:5
    |
269 |     user_position: BattlePosition,
    |     ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_user_position`

warning: unused variable: `user_position`
   --> src/genx/move_effects.rs:304:5
    |
304 |     user_position: BattlePosition,
    |     ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_user_position`

warning: unused variable: `state`
   --> src/genx/move_effects.rs:341:5
    |
341 |     state: &State,
    |     ^^^^^ help: if this is intentional, prefix it with an underscore: `_state`

warning: unused variable: `generation`
   --> src/genx/move_effects.rs:344:5
    |
344 |     generation: &GenerationMechanics,
    |     ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_generation`

warning: unused variable: `state`
   --> src/genx/move_effects.rs:365:5
    |
365 |     state: &State,
    |     ^^^^^ help: if this is intentional, prefix it with an underscore: `_state`

warning: unused variable: `generation`
   --> src/genx/move_effects.rs:368:5
    |
368 |     generation: &GenerationMechanics,
    |     ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_generation`

warning: unused variable: `state`
   --> src/genx/move_effects.rs:390:5
    |
390 |     state: &State,
    |     ^^^^^ help: if this is intentional, prefix it with an underscore: `_state`

warning: unused variable: `generation`
   --> src/genx/move_effects.rs:393:5
    |
393 |     generation: &GenerationMechanics,
    |     ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_generation`

warning: unused variable: `state`
   --> src/genx/move_effects.rs:414:5
    |
414 |     state: &State,
    |     ^^^^^ help: if this is intentional, prefix it with an underscore: `_state`

warning: unused variable: `generation`
   --> src/genx/move_effects.rs:417:5
    |
417 |     generation: &GenerationMechanics,
    |     ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_generation`

warning: unused variable: `state`
   --> src/genx/move_effects.rs:438:5
    |
438 |     state: &State,
    |     ^^^^^ help: if this is intentional, prefix it with an underscore: `_state`

warning: unused variable: `user_position`
   --> src/genx/move_effects.rs:439:5
    |
439 |     user_position: BattlePosition,
    |     ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_user_position`

warning: unused variable: `generation`
   --> src/genx/move_effects.rs:441:5
    |
441 |     generation: &GenerationMechanics,
    |     ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_generation`

warning: unused variable: `state`
   --> src/genx/move_effects.rs:466:5
    |
466 |     state: &State,
    |     ^^^^^ help: if this is intentional, prefix it with an underscore: `_state`

warning: unused variable: `user_position`
   --> src/genx/move_effects.rs:467:5
    |
467 |     user_position: BattlePosition,
    |     ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_user_position`

warning: unused variable: `generation`
   --> src/genx/move_effects.rs:469:5
    |
469 |     generation: &GenerationMechanics,
    |     ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_generation`

warning: unused variable: `state`
   --> src/genx/move_effects.rs:505:5
    |
505 |     state: &State,
    |     ^^^^^ help: if this is intentional, prefix it with an underscore: `_state`

warning: unused variable: `user_position`
   --> src/genx/move_effects.rs:506:5
    |
506 |     user_position: BattlePosition,
    |     ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_user_position`

warning: unused variable: `generation`
   --> src/genx/move_effects.rs:572:5
    |
572 |     generation: Option<&GenerationMechanics>,
    |     ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_generation`

warning: unused variable: `generation`
   --> src/genx/move_effects.rs:752:5
    |
752 |     generation: &GenerationMechanics,
    |     ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_generation`

warning: unused variable: `generation`
   --> src/genx/move_effects.rs:788:5
    |
788 |     generation: &GenerationMechanics,
    |     ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_generation`

warning: unused variable: `user_position`
    --> src/genx/move_effects.rs:1009:5
     |
1009 |     user_position: BattlePosition,
     |     ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_user_position`

warning: unused variable: `generation`
    --> src/genx/move_effects.rs:1011:5
     |
1011 |     generation: &GenerationMechanics,
     |     ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_generation`

warning: unused variable: `state`
    --> src/genx/move_effects.rs:1041:5
     |
1041 |     state: &State,
     |     ^^^^^ help: if this is intentional, prefix it with an underscore: `_state`

warning: unused variable: `generation`
    --> src/genx/move_effects.rs:1044:5
     |
1044 |     generation: &GenerationMechanics,
     |     ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_generation`

warning: unused variable: `state`
    --> src/genx/move_effects.rs:1073:5
     |
1073 |     state: &State,
     |     ^^^^^ help: if this is intentional, prefix it with an underscore: `_state`

warning: unused variable: `generation`
    --> src/genx/move_effects.rs:1076:5
     |
1076 |     generation: &GenerationMechanics,
     |     ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_generation`

warning: unused variable: `generation`
    --> src/genx/move_effects.rs:1102:5
     |
1102 |     generation: &GenerationMechanics,
     |     ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_generation`

warning: unused variable: `hit_number`
    --> src/genx/move_effects.rs:1282:5
     |
1282 |     hit_number: i32,
     |     ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_hit_number`

warning: unused variable: `generation`
    --> src/genx/move_effects.rs:1283:5
     |
1283 |     generation: &GenerationMechanics,
     |     ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_generation`

warning: unused variable: `user_position`
    --> src/genx/move_effects.rs:1407:5
     |
1407 |     user_position: BattlePosition,
     |     ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_user_position`

warning: unused variable: `state`
    --> src/genx/move_effects.rs:1556:5
     |
1556 |     state: &State,
     |     ^^^^^ help: if this is intentional, prefix it with an underscore: `_state`

warning: unused variable: `user_position`
    --> src/genx/move_effects.rs:1557:5
     |
1557 |     user_position: BattlePosition,
     |     ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_user_position`

warning: unused variable: `target_positions`
    --> src/genx/move_effects.rs:1558:5
     |
1558 |     target_positions: &[BattlePosition],
     |     ^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_target_positions`

warning: unused variable: `generation`
    --> src/genx/move_effects.rs:1559:5
     |
1559 |     generation: &GenerationMechanics,
     |     ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_generation`

warning: unused variable: `recoil_percentage`
    --> src/genx/move_effects.rs:1560:5
     |
1560 |     recoil_percentage: i16,
     |     ^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_recoil_percentage`

warning: unused variable: `state`
    --> src/genx/move_effects.rs:1570:5
     |
1570 |     state: &State,
     |     ^^^^^ help: if this is intentional, prefix it with an underscore: `_state`

warning: unused variable: `user_position`
    --> src/genx/move_effects.rs:1571:5
     |
1571 |     user_position: BattlePosition,
     |     ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_user_position`

warning: unused variable: `target_positions`
    --> src/genx/move_effects.rs:1572:5
     |
1572 |     target_positions: &[BattlePosition],
     |     ^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_target_positions`

warning: unused variable: `generation`
    --> src/genx/move_effects.rs:1573:5
     |
1573 |     generation: &GenerationMechanics,
     |     ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_generation`

warning: unused variable: `drain_percentage`
    --> src/genx/move_effects.rs:1574:5
     |
1574 |     drain_percentage: i16,
     |     ^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_drain_percentage`

warning: unused variable: `generation`
    --> src/genx/move_effects.rs:1702:41
     |
1702 | fn is_immune_to_burn(pokemon: &Pokemon, generation: &GenerationMechanics) -> bool {
     |                                         ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_generation`

warning: unused variable: `damage_multiplier`
   --> src/genx/format_instruction_generator.rs:387:9
    |
387 |         damage_multiplier: f32,
    |         ^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_damage_multiplier`

warning: unused variable: `user_position`
   --> src/genx/doubles_mechanics.rs:128:9
    |
128 |         user_position: BattlePosition,
    |         ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_user_position`

warning: unused variable: `user_position`
   --> src/genx/doubles_mechanics.rs:147:9
    |
147 |         user_position: BattlePosition,
    |         ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_user_position`

warning: unused variable: `user_position`
   --> src/genx/doubles_mechanics.rs:157:9
    |
157 |         user_position: BattlePosition,
    |         ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_user_position`

warning: unused variable: `side`
   --> src/genx/doubles_mechanics.rs:172:13
    |
172 |         let side = state.get_side(target_side);
    |             ^^^^ help: if this is intentional, prefix it with an underscore: `_side`

warning: unused variable: `context`
   --> src/genx/abilities.rs:115:29
    |
115 |     fn modify_damage(&self, context: &DamageContext) -> AbilityModifier {
    |                             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_context`

warning: unused variable: `move_type`
   --> src/genx/abilities.rs:120:33
    |
120 |     fn provides_immunity(&self, move_type: &str) -> bool {
    |                                 ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_move_type`

warning: unused variable: `context`
   --> src/genx/abilities.rs:125:27
    |
125 |     fn modify_stab(&self, context: &DamageContext) -> f32 {
    |                           ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_context`

warning: unused variable: `context`
   --> src/genx/items.rs:282:29
    |
282 |     fn modify_damage(&self, context: &DamageContext) -> ItemModifier {
    |                             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_context`

warning: unused variable: `context`
    --> src/genx/items.rs:1992:38
     |
1992 |     fn check_reactive_trigger(&self, context: &DamageContext, _type_effectiveness: f32) -> ItemModifier {
     |                                      ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_context`

warning: unused variable: `context`
    --> src/genx/items.rs:2037:38
     |
2037 |     fn check_reactive_trigger(&self, context: &DamageContext, _type_effectiveness: f32) -> ItemModifier {
     |                                      ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_context`

warning: unused variable: `context`
    --> src/genx/items.rs:2082:38
     |
2082 |     fn check_reactive_trigger(&self, context: &DamageContext, _type_effectiveness: f32) -> ItemModifier {
     |                                      ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_context`

warning: unused variable: `context`
    --> src/genx/items.rs:2127:38
     |
2127 |     fn check_reactive_trigger(&self, context: &DamageContext, _type_effectiveness: f32) -> ItemModifier {
     |                                      ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_context`

warning: unused variable: `generation`
  --> src/genx/end_of_turn.rs:80:5
   |
80 |     generation: &GenerationMechanics,
   |     ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_generation`

warning: unused variable: `generation`
   --> src/genx/end_of_turn.rs:250:5
    |
250 |     generation: &GenerationMechanics,
    |     ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_generation`

warning: unused variable: `generation`
   --> src/genx/end_of_turn.rs:288:5
    |
288 |     generation: &GenerationMechanics,
    |     ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_generation`

warning: unused variable: `generation`
   --> src/genx/end_of_turn.rs:354:5
    |
354 |     generation: &GenerationMechanics,
    |     ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_generation`

warning: unused variable: `generation`
   --> src/genx/end_of_turn.rs:385:5
    |
385 |     generation: &GenerationMechanics,
    |     ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_generation`

warning: unused variable: `generation`
   --> src/genx/end_of_turn.rs:621:5
    |
621 |     generation: &GenerationMechanics,
    |     ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_generation`

warning: unused variable: `generation`
   --> src/genx/end_of_turn.rs:809:61
    |
809 | fn calculate_poison_damage(pokemon: &crate::state::Pokemon, generation: &GenerationMechanics) -> i16 {
    |                                                             ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_generation`

warning: unused variable: `generation`
   --> src/genx/end_of_turn.rs:825:60
    |
825 | fn calculate_toxic_damage(pokemon: &crate::state::Pokemon, generation: &GenerationMechanics) -> i16 {
    |                                                            ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_generation`

warning: unused variable: `generation`
   --> src/genx/end_of_turn.rs:857:5
    |
857 |     generation: &GenerationMechanics,
    |     ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_generation`

warning: unused variable: `attacker_position`
   --> src/genx/end_of_turn.rs:918:21
    |
918 |         for (slot, (attacker_position, damage_amount, turns_remaining, move_name)) in &side.future_sight_attacks {
    |                     ^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_attacker_position`

warning: unused variable: `move_name`
   --> src/genx/end_of_turn.rs:918:72
    |
918 |         for (slot, (attacker_position, damage_amount, turns_remaining, move_name)) in &side.future_sight_attacks {
    |                                                                        ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_move_name`

warning: unused variable: `generation`
   --> src/genx/end_of_turn.rs:909:5
    |
909 |     generation: &GenerationMechanics,
    |     ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_generation`

warning: unused variable: `generation`
   --> src/genx/end_of_turn.rs:961:5
    |
961 |     generation: &GenerationMechanics,
    |     ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_generation`

warning: unused variable: `generation`
    --> src/genx/end_of_turn.rs:1015:5
     |
1015 |     generation: &GenerationMechanics,
     |     ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_generation`

warning: unused variable: `generation`
    --> src/genx/end_of_turn.rs:1322:5
     |
1322 |     generation: &GenerationMechanics,
     |     ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_generation`

warning: unused variable: `state`
    --> src/genx/end_of_turn.rs:1360:5
     |
1360 |     state: &State,
     |     ^^^^^ help: if this is intentional, prefix it with an underscore: `_state`

warning: unused variable: `generation`
    --> src/genx/end_of_turn.rs:1361:5
     |
1361 |     generation: &GenerationMechanics,
     |     ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_generation`

warning: unused variable: `state`
    --> src/genx/end_of_turn.rs:1390:5
     |
1390 |     state: &State,
     |     ^^^^^ help: if this is intentional, prefix it with an underscore: `_state`

warning: unused variable: `generation`
    --> src/genx/end_of_turn.rs:1391:5
     |
1391 |     generation: &GenerationMechanics,
     |     ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_generation`

warning: unused variable: `state`
    --> src/genx/end_of_turn.rs:1425:5
     |
1425 |     state: &State,
     |     ^^^^^ help: if this is intentional, prefix it with an underscore: `_state`

warning: unused variable: `generation`
    --> src/genx/end_of_turn.rs:1426:5
     |
1426 |     generation: &GenerationMechanics,
     |     ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_generation`

warning: unused variable: `state`
    --> src/genx/end_of_turn.rs:1494:5
     |
1494 |     state: &State,
     |     ^^^^^ help: if this is intentional, prefix it with an underscore: `_state`

warning: unused variable: `generation`
    --> src/genx/end_of_turn.rs:1495:5
     |
1495 |     generation: &GenerationMechanics,
     |     ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_generation`

warning: unused variable: `generation`
   --> src/genx/switch_effects.rs:297:5
    |
297 |     generation: &GenerationMechanics,
    |     ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_generation`

warning: unused variable: `state`
   --> src/genx/switch_effects.rs:382:5
    |
382 |     state: &State,
    |     ^^^^^ help: if this is intentional, prefix it with an underscore: `_state`

warning: unused variable: `switching_position`
   --> src/genx/switch_effects.rs:383:5
    |
383 |     switching_position: BattlePosition,
    |     ^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_switching_position`

warning: unused variable: `generation`
   --> src/genx/switch_effects.rs:384:5
    |
384 |     generation: &GenerationMechanics,
    |     ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_generation`

warning: variable does not need to be mutable
   --> src/genx/switch_effects.rs:386:9
    |
386 |     let mut instructions = Vec::new();
    |         ----^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused variable: `state`
   --> src/genx/switch_effects.rs:396:5
    |
396 |     state: &State,
    |     ^^^^^ help: if this is intentional, prefix it with an underscore: `_state`

warning: unused variable: `switching_position`
   --> src/genx/switch_effects.rs:397:5
    |
397 |     switching_position: BattlePosition,
    |     ^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_switching_position`

warning: unused variable: `generation`
   --> src/genx/switch_effects.rs:398:5
    |
398 |     generation: &GenerationMechanics,
    |     ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_generation`

warning: variable does not need to be mutable
   --> src/genx/switch_effects.rs:400:9
    |
400 |     let mut instructions = Vec::new();
    |         ----^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: unused variable: `state`
   --> src/genx/switch_effects.rs:410:5
    |
410 |     state: &State,
    |     ^^^^^ help: if this is intentional, prefix it with an underscore: `_state`

warning: unused variable: `switching_position`
   --> src/genx/switch_effects.rs:411:5
    |
411 |     switching_position: BattlePosition,
    |     ^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_switching_position`

warning: unused variable: `generation`
   --> src/genx/switch_effects.rs:412:5
    |
412 |     generation: &GenerationMechanics,
    |     ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_generation`

warning: variable does not need to be mutable
   --> src/genx/switch_effects.rs:414:9
    |
414 |     let mut instructions = Vec::new();
    |         ----^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: unused variable: `generation`
   --> src/genx/switch_effects.rs:425:5
    |
425 |     generation: &GenerationMechanics,
    |     ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_generation`

warning: unused variable: `state`
   --> src/genx/switch_effects.rs:558:5
    |
558 |     state: &State,
    |     ^^^^^ help: if this is intentional, prefix it with an underscore: `_state`

warning: unused variable: `generation`
   --> src/genx/switch_effects.rs:616:47
    |
616 | fn is_immune_to_intimidate(pokemon: &Pokemon, generation: &GenerationMechanics) -> bool {
    |                                               ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_generation`

warning: unused variable: `generation`
   --> src/genx/switch_effects.rs:625:40
    |
625 | fn is_ability_traceable(ability: &str, generation: &GenerationMechanics) -> bool {
    |                                        ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_generation`

warning: unreachable pattern
   --> src/instruction.rs:207:13
    |
150 |             Instruction::ChangeVolatileStatusDuration(instr) => vec![instr.target_position],
    |             ------------------------------------------------ matches all the relevant values
...
207 |             Instruction::ChangeVolatileStatusDuration(instr) => vec![instr.target_position],
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no value can reach this
    |
    = note: `#[warn(unreachable_patterns)]` on by default

warning: unused variable: `instr`
   --> src/instruction.rs:154:45
    |
154 |             Instruction::ApplySideCondition(instr) => {
    |                                             ^^^^^ help: if this is intentional, prefix it with an underscore: `_instr`

warning: unused variable: `instr`
   --> src/instruction.rs:159:46
    |
159 |             Instruction::RemoveSideCondition(instr) => vec![],
    |                                              ^^^^^ help: if this is intentional, prefix it with an underscore: `_instr`

warning: unused variable: `instr`
   --> src/instruction.rs:160:57
    |
160 |             Instruction::DecrementSideConditionDuration(instr) => vec![],
    |                                                         ^^^^^ help: if this is intentional, prefix it with an underscore: `_instr`

warning: unused variable: `move_index`
   --> src/state.rs:725:68
    |
725 |     fn get_valid_targets_for_move(&self, user_side: SideReference, move_index: MoveIndex, move_data: &Move) -> Vec<BattlePosition> {
    |                                                                    ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_move_index`

warning: unused variable: `i`
   --> src/ui/bridge.rs:777:14
    |
777 |         for (i, ui_pokemon) in side_one.pokemon.iter().enumerate() {
    |              ^ help: if this is intentional, prefix it with an underscore: `_i`

warning: unused variable: `i`
   --> src/ui/bridge.rs:782:14
    |
782 |         for (i, ui_pokemon) in side_two.pokemon.iter().enumerate() {
    |              ^ help: if this is intentional, prefix it with an underscore: `_i`

warning: method `is_self_targeting_move` is never used
   --> src/genx/format_instruction_generator.rs:308:8
    |
26  | impl FormatInstructionGenerator {
    | ------------------------------- method in this implementation
...
308 |     fn is_self_targeting_move(&self, move_data: &Move) -> bool {
    |        ^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: function `process_special_ongoing_effects` is never used
   --> src/genx/end_of_turn.rs:760:4
    |
760 | fn process_special_ongoing_effects(
    |    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: method `calculate_stats` is never used
   --> src/ui/pokemon_builder.rs:308:8
    |
73  | impl PokemonBuilder {
    | ------------------- method in this implementation
...
308 |     fn calculate_stats(&self, base_stats: &PSBaseStats, level: u8) -> UIPokemonStats {
    |        ^^^^^^^^^^^^^^^

warning: `tapu-simu` (lib) generated 121 warnings (run `cargo fix --lib -p tapu-simu` to apply 13 suggestions)
    Finished `dev` profile [unoptimized + debuginfo] target(s) in 0.04s
     Running `target/debug/ui-server`
🎮 Starting Tapu Simu Testing UI
📁 Serving on port 3001
🌐 Open http://localhost:3001 in your browser
Creating ServerState...
Current working directory: "/home/mingukim/Documents/pokemon/tapu-simu"
Successfully loaded 1420 Pokemon, 936 moves, 537 items
Successfully loaded Pokemon data in ServerState!
🚀 Tapu Simu UI server starting on http://0.0.0.0:3001
Warning: Ability '' not available for Flutter Mane, using default
Warning: Item '' not found, ignoring
Warning: Ability '' not available for Dragapult, using default
Warning: Item '' not found, ignoring
Warning: Ability '' not available for Heatran, using default
Warning: Item '' not found, ignoring
Warning: Ability '' not available for Flutter Mane, using default
Warning: Item '' not found, ignoring
Warning: Ability '' not available for Dragapult, using default
Warning: Item '' not found, ignoring
Warning: Ability '' not available for Heatran, using default
Warning: Item '' not found, ignoring
Warning: Ability '' not available for Flutter Mane, using default
Warning: Item '' not found, ignoring
Warning: Ability '' not available for Dragapult, using default
Warning: Item '' not found, ignoring
Warning: Ability '' not available for Heatran, using default
Warning: Item '' not found, ignoring
